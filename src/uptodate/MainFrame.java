/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package uptodate;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.util.Random;
import javax.swing.JLabel;
import static uptodate.HomePage.DB_URL;
import static uptodate.Reminder.*;
import static uptodate.User.DB_URL;
import static uptodate.User.conn;
import static uptodate.User.stmt;
/**
 *
 * @author marktan
 */
public class MainFrame extends javax.swing.JFrame {

    static String USER = "natkram927";
    static String PASS = "aljemakart123";
    static String DBNAME = "uptodate";
    static final String JDBC_DRIVER = "org.apache.derby.jdbc.ClientDriver";
    static String DB_URL = "jdbc:derby://localhost:1527/";
    static Connection conn;
    static Statement stmt;

    static String USERNAME = "";
    static String PASSWORD = "";

    static boolean signedIn = false;
    /**
     * Creates new form MainFrame
     */
    public MainFrame() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        placeholder = new javax.swing.JPanel();
        openApp = new javax.swing.JPanel();
        SignInBut = new javax.swing.JButton();
        CreateAccBut = new javax.swing.JButton();
        upToDatetitle = new javax.swing.JLabel();
        createAccount = new javax.swing.JPanel();
        backfromCreate = new javax.swing.JButton();
        create = new javax.swing.JButton();
        usernameTxt = new javax.swing.JLabel();
        passwordTxt = new javax.swing.JLabel();
        newUserField = new javax.swing.JTextField();
        newPassField = new javax.swing.JPasswordField();
        createTitle = new javax.swing.JLabel();
        error1 = new javax.swing.JLabel();
        signIn = new javax.swing.JPanel();
        backfromSignIn = new javax.swing.JButton();
        enter = new javax.swing.JButton();
        usernameTxt1 = new javax.swing.JLabel();
        passwordTxt1 = new javax.swing.JLabel();
        createTitle1 = new javax.swing.JLabel();
        error = new javax.swing.JLabel();
        newUserField1 = new javax.swing.JTextField();
        newPassField1 = new javax.swing.JPasswordField();
        homePage = new javax.swing.JPanel();
        greeting = new javax.swing.JLabel();
        editUser = new javax.swing.JPanel();
        newUTF = new javax.swing.JTextField();
        confirmNewNameL = new javax.swing.JLabel();
        newNameL = new javax.swing.JLabel();
        editUserTitle = new javax.swing.JLabel();
        confirmUTF = new javax.swing.JTextField();
        enterNewUserName = new javax.swing.JButton();
        backFromEUse = new javax.swing.JButton();
        NonMatchError = new javax.swing.JLabel();
        editPass = new javax.swing.JPanel();
        enterNewPW = new javax.swing.JButton();
        editPWtitle = new javax.swing.JLabel();
        oldPWl = new javax.swing.JLabel();
        newPWl = new javax.swing.JLabel();
        oldPWpf = new javax.swing.JPasswordField();
        newPWpf = new javax.swing.JPasswordField();
        backFromEPass = new javax.swing.JButton();
        confirmPassL = new javax.swing.JLabel();
        confPWpf = new javax.swing.JPasswordField();
        NonMatchError1 = new javax.swing.JLabel();
        viewAccount = new javax.swing.JPanel();
        eUse = new javax.swing.JButton();
        ePass = new javax.swing.JButton();
        usertitle = new javax.swing.JLabel();
        acctitle = new javax.swing.JLabel();
        accUser = new javax.swing.JLabel();
        accPass = new javax.swing.JLabel();
        viewTitle = new javax.swing.JLabel();
        backfromView = new javax.swing.JButton();
        createEvnt = new javax.swing.JPanel();
        cEvnt = new javax.swing.JButton();
        eTitle = new javax.swing.JLabel();
        eStartDate = new javax.swing.JLabel();
        eEndDate = new javax.swing.JLabel();
        eLocation = new javax.swing.JLabel();
        eDesc = new javax.swing.JLabel();
        sdTF = new javax.swing.JTextField();
        edTF = new javax.swing.JTextField();
        locTF = new javax.swing.JTextField();
        descTF = new javax.swing.JTextField();
        titleTF = new javax.swing.JTextField();
        backFromCreateEvnt = new javax.swing.JButton();
        cEvntTitle = new javax.swing.JLabel();
        editEvnt = new javax.swing.JPanel();
        eEvnt = new javax.swing.JButton();
        evNo = new javax.swing.JLabel();
        eEventAtt = new javax.swing.JLabel();
        newInfoEvent = new javax.swing.JLabel();
        infoEventTF = new javax.swing.JTextField();
        eventOptions = new javax.swing.JComboBox();
        editEvntTitle = new javax.swing.JLabel();
        backFromEditEvent = new javax.swing.JButton();
        evNoTF = new javax.swing.JTextField();
        eEventError = new javax.swing.JLabel();
        deleteEvnt = new javax.swing.JPanel();
        dEvnt = new javax.swing.JButton();
        backFromDeleteEvnt = new javax.swing.JButton();
        dEventTitle = new javax.swing.JLabel();
        dEventInfo = new javax.swing.JLabel();
        dEvntTF = new javax.swing.JTextField();
        dEvntError = new javax.swing.JLabel();
        createRem = new javax.swing.JPanel();
        time1 = new javax.swing.JLabel();
        date1 = new javax.swing.JLabel();
        freq1 = new javax.swing.JLabel();
        remTime1 = new javax.swing.JTextField();
        remDate1 = new javax.swing.JTextField();
        cRem = new javax.swing.JButton();
        cRemTitle = new javax.swing.JLabel();
        remEvNo = new javax.swing.JLabel();
        remEvNoTF = new javax.swing.JTextField();
        backFromCreateRem = new javax.swing.JButton();
        freqOptions = new javax.swing.JComboBox();
        cRemError = new javax.swing.JLabel();
        editRem = new javax.swing.JPanel();
        eRem = new javax.swing.JButton();
        evNo1 = new javax.swing.JLabel();
        evNoTF1 = new javax.swing.JTextField();
        eRemAtt1 = new javax.swing.JLabel();
        remOptions1 = new javax.swing.JComboBox();
        newInfoRem1 = new javax.swing.JLabel();
        infoRemTF1 = new javax.swing.JTextField();
        editRemTitle = new javax.swing.JLabel();
        backFromEditRem = new javax.swing.JButton();
        rDate = new javax.swing.JLabel();
        rDateTF = new javax.swing.JTextField();
        editRemError = new javax.swing.JLabel();
        deleteRem = new javax.swing.JPanel();
        backFromDeleteRem = new javax.swing.JButton();
        dRemTitle = new javax.swing.JLabel();
        evNoL = new javax.swing.JLabel();
        dRemTF = new javax.swing.JTextField();
        dRem = new javax.swing.JButton();
        deleteRemError = new javax.swing.JLabel();
        remDate = new javax.swing.JLabel();
        remDateTF = new javax.swing.JTextField();
        jMenuBar1 = new javax.swing.JMenuBar();
        Account = new javax.swing.JMenu();
        viewAcc = new javax.swing.JMenuItem();
        Event = new javax.swing.JMenu();
        CreateEvent = new javax.swing.JMenuItem();
        EditEvent = new javax.swing.JMenuItem();
        DeleteEvent = new javax.swing.JMenuItem();
        Reminder = new javax.swing.JMenu();
        CreateRem = new javax.swing.JMenuItem();
        EditRem = new javax.swing.JMenuItem();
        DeleteRem = new javax.swing.JMenuItem();
        Settings = new javax.swing.JMenu();
        CalendarRange = new javax.swing.JMenu();
        Day = new javax.swing.JMenuItem();
        Week = new javax.swing.JMenuItem();
        Month = new javax.swing.JMenuItem();
        CalendarColor = new javax.swing.JMenu();
        Red = new javax.swing.JMenuItem();
        Green = new javax.swing.JMenuItem();
        Blue = new javax.swing.JMenuItem();
        Help = new javax.swing.JMenu();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        placeholder.setLayout(new java.awt.CardLayout());

        SignInBut.setText("Sign In");
        SignInBut.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SignInButActionPerformed(evt);
            }
        });

        CreateAccBut.setText("Create Account");
        CreateAccBut.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CreateAccButActionPerformed(evt);
            }
        });

        upToDatetitle.setFont(new java.awt.Font("Lucida Grande", 0, 24)); // NOI18N
        upToDatetitle.setText("UpToDate");

        javax.swing.GroupLayout openAppLayout = new javax.swing.GroupLayout(openApp);
        openApp.setLayout(openAppLayout);
        openAppLayout.setHorizontalGroup(
            openAppLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(openAppLayout.createSequentialGroup()
                .addContainerGap(98, Short.MAX_VALUE)
                .addComponent(SignInBut)
                .addGap(64, 64, 64)
                .addComponent(CreateAccBut)
                .addGap(87, 87, 87))
            .addGroup(openAppLayout.createSequentialGroup()
                .addGap(179, 179, 179)
                .addComponent(upToDatetitle)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        openAppLayout.setVerticalGroup(
            openAppLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, openAppLayout.createSequentialGroup()
                .addContainerGap(125, Short.MAX_VALUE)
                .addComponent(upToDatetitle)
                .addGap(78, 78, 78)
                .addGroup(openAppLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(SignInBut)
                    .addComponent(CreateAccBut))
                .addGap(78, 78, 78))
        );

        placeholder.add(openApp, "card2");

        backfromCreate.setText(" Back");
        backfromCreate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                backfromCreateActionPerformed(evt);
            }
        });

        create.setText("Create");
        create.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                createActionPerformed(evt);
            }
        });

        usernameTxt.setText("Username");

        passwordTxt.setText("Password");

        createTitle.setFont(new java.awt.Font("Lucida Grande", 0, 14)); // NOI18N
        createTitle.setText("Create an Account");

        error1.setForeground(new java.awt.Color(255, 0, 0));

        javax.swing.GroupLayout createAccountLayout = new javax.swing.GroupLayout(createAccount);
        createAccount.setLayout(createAccountLayout);
        createAccountLayout.setHorizontalGroup(
            createAccountLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, createAccountLayout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addGroup(createAccountLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(error1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(createTitle, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(171, 171, 171))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, createAccountLayout.createSequentialGroup()
                .addContainerGap(115, Short.MAX_VALUE)
                .addGroup(createAccountLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(passwordTxt)
                    .addComponent(usernameTxt)
                    .addComponent(backfromCreate))
                .addGap(78, 78, 78)
                .addGroup(createAccountLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(create)
                    .addGroup(createAccountLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(newUserField, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 105, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(newPassField, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 105, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(101, 101, 101))
        );
        createAccountLayout.setVerticalGroup(
            createAccountLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, createAccountLayout.createSequentialGroup()
                .addGap(48, 48, 48)
                .addComponent(createTitle)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(error1, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 45, Short.MAX_VALUE)
                .addGroup(createAccountLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(usernameTxt)
                    .addComponent(newUserField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(createAccountLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(passwordTxt)
                    .addComponent(newPassField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(35, 35, 35)
                .addGroup(createAccountLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(backfromCreate)
                    .addComponent(create))
                .addGap(64, 64, 64))
        );

        placeholder.add(createAccount, "card4");

        backfromSignIn.setText(" Back");
        backfromSignIn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                backfromSignInActionPerformed(evt);
            }
        });

        enter.setText("Enter");
        enter.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                enterActionPerformed(evt);
            }
        });

        usernameTxt1.setText("Username");

        passwordTxt1.setText("Password");

        createTitle1.setFont(new java.awt.Font("Lucida Grande", 0, 14)); // NOI18N
        createTitle1.setText("Sign In");

        error.setForeground(new java.awt.Color(255, 0, 0));

        javax.swing.GroupLayout signInLayout = new javax.swing.GroupLayout(signIn);
        signIn.setLayout(signInLayout);
        signInLayout.setHorizontalGroup(
            signInLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(signInLayout.createSequentialGroup()
                .addGap(108, 108, 108)
                .addGroup(signInLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(signInLayout.createSequentialGroup()
                        .addGap(14, 14, 14)
                        .addComponent(backfromSignIn)
                        .addGap(83, 83, 83)
                        .addComponent(enter)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, signInLayout.createSequentialGroup()
                        .addGroup(signInLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(signInLayout.createSequentialGroup()
                                .addComponent(passwordTxt1)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(newPassField1, javax.swing.GroupLayout.PREFERRED_SIZE, 105, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(signInLayout.createSequentialGroup()
                                .addGap(0, 0, Short.MAX_VALUE)
                                .addComponent(usernameTxt1)
                                .addGap(104, 104, 104)
                                .addComponent(newUserField1, javax.swing.GroupLayout.PREFERRED_SIZE, 105, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(97, 97, 97))))
            .addGroup(signInLayout.createSequentialGroup()
                .addGap(175, 175, 175)
                .addComponent(error, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, signInLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(createTitle1)
                .addGap(209, 209, 209))
        );
        signInLayout.setVerticalGroup(
            signInLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(signInLayout.createSequentialGroup()
                .addGap(50, 50, 50)
                .addComponent(createTitle1, javax.swing.GroupLayout.PREFERRED_SIZE, 16, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(error, javax.swing.GroupLayout.PREFERRED_SIZE, 19, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 40, Short.MAX_VALUE)
                .addGroup(signInLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(usernameTxt1)
                    .addComponent(newUserField1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(signInLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(passwordTxt1)
                    .addComponent(newPassField1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(41, 41, 41)
                .addGroup(signInLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(backfromSignIn)
                    .addComponent(enter))
                .addGap(69, 69, 69))
        );

        placeholder.add(signIn, "card3");

        greeting.setFont(new java.awt.Font("Lucida Grande", 0, 18)); // NOI18N
        greeting.setText("Hello");

        javax.swing.GroupLayout homePageLayout = new javax.swing.GroupLayout(homePage);
        homePage.setLayout(homePageLayout);
        homePageLayout.setHorizontalGroup(
            homePageLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(homePageLayout.createSequentialGroup()
                .addGap(176, 176, 176)
                .addComponent(greeting)
                .addContainerGap(256, Short.MAX_VALUE))
        );
        homePageLayout.setVerticalGroup(
            homePageLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(homePageLayout.createSequentialGroup()
                .addGap(142, 142, 142)
                .addComponent(greeting)
                .addContainerGap(176, Short.MAX_VALUE))
        );

        placeholder.add(homePage, "card5");

        confirmNewNameL.setText("Confirm Username");

        newNameL.setText("New Username");

        editUserTitle.setFont(new java.awt.Font("Lucida Grande", 0, 14)); // NOI18N
        editUserTitle.setText("Edit Username");

        enterNewUserName.setText("Enter");
        enterNewUserName.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                enterNewUserNameActionPerformed(evt);
            }
        });

        backFromEUse.setText("Back");
        backFromEUse.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                backFromEUseActionPerformed(evt);
            }
        });

        NonMatchError.setForeground(new java.awt.Color(255, 0, 0));

        javax.swing.GroupLayout editUserLayout = new javax.swing.GroupLayout(editUser);
        editUser.setLayout(editUserLayout);
        editUserLayout.setHorizontalGroup(
            editUserLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, editUserLayout.createSequentialGroup()
                .addContainerGap(88, Short.MAX_VALUE)
                .addGroup(editUserLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(editUserLayout.createSequentialGroup()
                        .addComponent(NonMatchError, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 105, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, editUserLayout.createSequentialGroup()
                        .addGap(4, 4, 4)
                        .addGroup(editUserLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, editUserLayout.createSequentialGroup()
                                .addGroup(editUserLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, editUserLayout.createSequentialGroup()
                                        .addComponent(newNameL)
                                        .addGap(91, 91, 91))
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, editUserLayout.createSequentialGroup()
                                        .addGroup(editUserLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                            .addComponent(confirmNewNameL)
                                            .addComponent(backFromEUse))
                                        .addGap(79, 79, 79)))
                                .addGroup(editUserLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(enterNewUserName)
                                    .addGroup(editUserLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                        .addComponent(confirmUTF)
                                        .addComponent(newUTF, javax.swing.GroupLayout.PREFERRED_SIZE, 105, javax.swing.GroupLayout.PREFERRED_SIZE))))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, editUserLayout.createSequentialGroup()
                                .addComponent(editUserTitle)
                                .addGap(90, 90, 90)))))
                .addGap(83, 83, 83))
        );
        editUserLayout.setVerticalGroup(
            editUserLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, editUserLayout.createSequentialGroup()
                .addGap(38, 38, 38)
                .addComponent(editUserTitle)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(NonMatchError, javax.swing.GroupLayout.DEFAULT_SIZE, 48, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(editUserLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(newUTF, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(newNameL))
                .addGap(34, 34, 34)
                .addGroup(editUserLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(confirmUTF, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(confirmNewNameL))
                .addGap(44, 44, 44)
                .addGroup(editUserLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(enterNewUserName)
                    .addComponent(backFromEUse))
                .addGap(54, 54, 54))
        );

        placeholder.add(editUser, "card6");

        enterNewPW.setText("Enter");
        enterNewPW.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                enterNewPWActionPerformed(evt);
            }
        });

        editPWtitle.setFont(new java.awt.Font("Lucida Grande", 0, 14)); // NOI18N
        editPWtitle.setText("Edit Password");

        oldPWl.setText("Old Password");

        newPWl.setText("New Password");

        backFromEPass.setText("Back");
        backFromEPass.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                backFromEPassActionPerformed(evt);
            }
        });

        confirmPassL.setText("Confirm Password");

        NonMatchError1.setForeground(new java.awt.Color(255, 0, 0));

        javax.swing.GroupLayout editPassLayout = new javax.swing.GroupLayout(editPass);
        editPass.setLayout(editPassLayout);
        editPassLayout.setHorizontalGroup(
            editPassLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(editPassLayout.createSequentialGroup()
                .addGap(86, 86, 86)
                .addComponent(confirmPassL)
                .addGap(0, 0, Short.MAX_VALUE))
            .addGroup(editPassLayout.createSequentialGroup()
                .addGroup(editPassLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(editPassLayout.createSequentialGroup()
                        .addGap(101, 101, 101)
                        .addComponent(oldPWl)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 99, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, editPassLayout.createSequentialGroup()
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(backFromEPass)
                        .addGap(85, 85, 85)))
                .addComponent(oldPWpf, javax.swing.GroupLayout.PREFERRED_SIZE, 105, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(86, 86, 86))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, editPassLayout.createSequentialGroup()
                .addGroup(editPassLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(editPassLayout.createSequentialGroup()
                        .addGap(96, 96, 96)
                        .addComponent(newPWl)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(newPWpf, javax.swing.GroupLayout.PREFERRED_SIZE, 105, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(editPassLayout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addGroup(editPassLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(enterNewPW)
                            .addComponent(confPWpf, javax.swing.GroupLayout.PREFERRED_SIZE, 105, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addGap(86, 86, 86))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, editPassLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(editPassLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(editPWtitle)
                    .addComponent(NonMatchError1, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(132, 132, 132))
        );
        editPassLayout.setVerticalGroup(
            editPassLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, editPassLayout.createSequentialGroup()
                .addGap(27, 27, 27)
                .addComponent(editPWtitle)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(NonMatchError1, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(12, 12, 12)
                .addGroup(editPassLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(oldPWl)
                    .addComponent(oldPWpf, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(20, 20, 20)
                .addGroup(editPassLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(newPWl)
                    .addComponent(newPWpf, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(editPassLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(confirmPassL)
                    .addComponent(confPWpf, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 61, Short.MAX_VALUE)
                .addGroup(editPassLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(enterNewPW)
                    .addComponent(backFromEPass))
                .addGap(44, 44, 44))
        );

        placeholder.add(editPass, "card7");

        eUse.setText("Edit");
        eUse.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                eUseActionPerformed(evt);
            }
        });

        ePass.setText("Edit");
        ePass.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ePassActionPerformed(evt);
            }
        });

        usertitle.setText("Username");

        acctitle.setText("Password");

        accUser.setText("[username]");

        accPass.setText("[password]");

        viewTitle.setFont(new java.awt.Font("Lucida Grande", 0, 14)); // NOI18N
        viewTitle.setText("User Information");

        backfromView.setText("Back");
        backfromView.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                backfromViewActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout viewAccountLayout = new javax.swing.GroupLayout(viewAccount);
        viewAccount.setLayout(viewAccountLayout);
        viewAccountLayout.setHorizontalGroup(
            viewAccountLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(viewAccountLayout.createSequentialGroup()
                .addGap(80, 80, 80)
                .addGroup(viewAccountLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, viewAccountLayout.createSequentialGroup()
                        .addGroup(viewAccountLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(usertitle)
                            .addComponent(acctitle))
                        .addGroup(viewAccountLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(viewAccountLayout.createSequentialGroup()
                                .addGap(29, 29, 29)
                                .addComponent(accUser, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, viewAccountLayout.createSequentialGroup()
                                .addGap(31, 31, 31)
                                .addGroup(viewAccountLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(accPass, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 104, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(backfromView, javax.swing.GroupLayout.Alignment.TRAILING))))
                        .addGap(37, 37, 37)
                        .addGroup(viewAccountLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(eUse)
                            .addComponent(ePass)))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, viewAccountLayout.createSequentialGroup()
                        .addComponent(viewTitle)
                        .addGap(96, 96, 96)))
                .addGap(42, 42, 42))
        );
        viewAccountLayout.setVerticalGroup(
            viewAccountLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(viewAccountLayout.createSequentialGroup()
                .addGap(49, 49, 49)
                .addComponent(viewTitle)
                .addGap(41, 41, 41)
                .addGroup(viewAccountLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(usertitle)
                    .addComponent(eUse)
                    .addComponent(accUser, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(27, 27, 27)
                .addGroup(viewAccountLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(ePass)
                    .addComponent(acctitle)
                    .addComponent(accPass, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 77, Short.MAX_VALUE)
                .addComponent(backfromView)
                .addGap(40, 40, 40))
        );

        placeholder.add(viewAccount, "card8");

        cEvnt.setText("Create");
        cEvnt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cEvntActionPerformed(evt);
            }
        });

        eTitle.setText("Title");

        eStartDate.setText("Start Date");

        eEndDate.setText("End Date");

        eLocation.setText("Location");

        eDesc.setText("Description");

        backFromCreateEvnt.setText("Back");
        backFromCreateEvnt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                backFromCreateEvntActionPerformed(evt);
            }
        });

        cEvntTitle.setFont(new java.awt.Font("Lucida Grande", 0, 14)); // NOI18N
        cEvntTitle.setText("Create Event");

        javax.swing.GroupLayout createEvntLayout = new javax.swing.GroupLayout(createEvnt);
        createEvnt.setLayout(createEvntLayout);
        createEvntLayout.setHorizontalGroup(
            createEvntLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, createEvntLayout.createSequentialGroup()
                .addGap(79, 79, 79)
                .addComponent(backFromCreateEvnt)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 136, Short.MAX_VALUE)
                .addComponent(cEvnt)
                .addGap(102, 102, 102))
            .addGroup(createEvntLayout.createSequentialGroup()
                .addGroup(createEvntLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(createEvntLayout.createSequentialGroup()
                        .addGap(131, 131, 131)
                        .addGroup(createEvntLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(eStartDate)
                            .addComponent(eTitle)
                            .addComponent(eLocation)
                            .addComponent(eDesc)
                            .addComponent(eEndDate))
                        .addGap(35, 35, 35)
                        .addGroup(createEvntLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(edTF)
                            .addComponent(titleTF, javax.swing.GroupLayout.DEFAULT_SIZE, 105, Short.MAX_VALUE)
                            .addComponent(sdTF, javax.swing.GroupLayout.DEFAULT_SIZE, 105, Short.MAX_VALUE)
                            .addComponent(locTF)
                            .addComponent(descTF)))
                    .addGroup(createEvntLayout.createSequentialGroup()
                        .addGap(197, 197, 197)
                        .addComponent(cEvntTitle)))
                .addContainerGap(132, Short.MAX_VALUE))
        );
        createEvntLayout.setVerticalGroup(
            createEvntLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, createEvntLayout.createSequentialGroup()
                .addGap(26, 26, 26)
                .addComponent(cEvntTitle)
                .addGap(18, 18, 18)
                .addGroup(createEvntLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(eTitle)
                    .addComponent(titleTF, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(createEvntLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(eStartDate)
                    .addComponent(sdTF, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(createEvntLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(eEndDate)
                    .addComponent(edTF, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(createEvntLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(eLocation)
                    .addComponent(locTF, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(createEvntLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(eDesc)
                    .addComponent(descTF, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(createEvntLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(cEvnt)
                    .addComponent(backFromCreateEvnt))
                .addContainerGap(30, Short.MAX_VALUE))
        );

        placeholder.add(createEvnt, "card9");

        eEvnt.setText("Change");
        eEvnt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                eEvntActionPerformed(evt);
            }
        });

        evNo.setText("Event No.");

        eEventAtt.setText("Edit...");

        newInfoEvent.setText("New Info");

        eventOptions.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "EVENTNAME", "STARTDATE", "ENDDATE", "LOCATION", "DESCRIPTION" }));

        editEvntTitle.setFont(new java.awt.Font("Lucida Grande", 0, 14)); // NOI18N
        editEvntTitle.setText("Edit Event");

        backFromEditEvent.setText("Back");
        backFromEditEvent.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                backFromEditEventActionPerformed(evt);
            }
        });

        eEventError.setForeground(new java.awt.Color(255, 0, 0));

        javax.swing.GroupLayout editEvntLayout = new javax.swing.GroupLayout(editEvnt);
        editEvnt.setLayout(editEvntLayout);
        editEvntLayout.setHorizontalGroup(
            editEvntLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(editEvntLayout.createSequentialGroup()
                .addGap(117, 117, 117)
                .addGroup(editEvntLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, editEvntLayout.createSequentialGroup()
                        .addComponent(editEvntTitle)
                        .addGap(86, 86, 86))
                    .addGroup(editEvntLayout.createSequentialGroup()
                        .addComponent(evNo)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(evNoTF, javax.swing.GroupLayout.PREFERRED_SIZE, 128, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, editEvntLayout.createSequentialGroup()
                        .addComponent(backFromEditEvent)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(eEvnt))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, editEvntLayout.createSequentialGroup()
                        .addGroup(editEvntLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, editEvntLayout.createSequentialGroup()
                                .addComponent(eEventAtt)
                                .addGap(60, 60, 60))
                            .addGroup(editEvntLayout.createSequentialGroup()
                                .addComponent(newInfoEvent)
                                .addGap(40, 40, 40)))
                        .addGroup(editEvntLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(eventOptions, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(infoEventTF, javax.swing.GroupLayout.PREFERRED_SIZE, 128, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addComponent(eEventError, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap(123, Short.MAX_VALUE))
        );
        editEvntLayout.setVerticalGroup(
            editEvntLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(editEvntLayout.createSequentialGroup()
                .addGap(42, 42, 42)
                .addComponent(editEvntTitle)
                .addGap(11, 11, 11)
                .addComponent(eEventError)
                .addGap(26, 26, 26)
                .addGroup(editEvntLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(evNoTF, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(evNo))
                .addGap(18, 18, 18)
                .addGroup(editEvntLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(eventOptions, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(eEventAtt))
                .addGap(18, 18, 18)
                .addGroup(editEvntLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(infoEventTF, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(newInfoEvent))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 61, Short.MAX_VALUE)
                .addGroup(editEvntLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(eEvnt)
                    .addComponent(backFromEditEvent))
                .addGap(39, 39, 39))
        );

        placeholder.add(editEvnt, "card10");

        dEvnt.setText("Delete");
        dEvnt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                dEvntActionPerformed(evt);
            }
        });

        backFromDeleteEvnt.setText("Back");
        backFromDeleteEvnt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                backFromDeleteEvntActionPerformed(evt);
            }
        });

        dEventTitle.setFont(new java.awt.Font("Lucida Grande", 0, 14)); // NOI18N
        dEventTitle.setText("Delete Event");

        dEventInfo.setText("Event No. to delete:");

        dEvntError.setForeground(new java.awt.Color(255, 0, 0));

        javax.swing.GroupLayout deleteEvntLayout = new javax.swing.GroupLayout(deleteEvnt);
        deleteEvnt.setLayout(deleteEvntLayout);
        deleteEvntLayout.setHorizontalGroup(
            deleteEvntLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(deleteEvntLayout.createSequentialGroup()
                .addGroup(deleteEvntLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(deleteEvntLayout.createSequentialGroup()
                        .addGap(194, 194, 194)
                        .addComponent(dEventTitle))
                    .addGroup(deleteEvntLayout.createSequentialGroup()
                        .addGap(91, 91, 91)
                        .addGroup(deleteEvntLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(dEvntError, javax.swing.GroupLayout.PREFERRED_SIZE, 285, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, deleteEvntLayout.createSequentialGroup()
                                .addGroup(deleteEvntLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(dEventInfo)
                                    .addGroup(deleteEvntLayout.createSequentialGroup()
                                        .addGap(36, 36, 36)
                                        .addComponent(backFromDeleteEvnt)))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addGroup(deleteEvntLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(dEvnt)
                                    .addComponent(dEvntTF, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE))))))
                .addContainerGap(100, Short.MAX_VALUE))
        );
        deleteEvntLayout.setVerticalGroup(
            deleteEvntLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(deleteEvntLayout.createSequentialGroup()
                .addGap(73, 73, 73)
                .addComponent(dEventTitle)
                .addGap(9, 9, 9)
                .addComponent(dEvntError)
                .addGap(41, 41, 41)
                .addGroup(deleteEvntLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(dEventInfo)
                    .addComponent(dEvntTF, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 89, Short.MAX_VALUE)
                .addGroup(deleteEvntLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(backFromDeleteEvnt)
                    .addComponent(dEvnt))
                .addGap(56, 56, 56))
        );

        placeholder.add(deleteEvnt, "card11");

        time1.setText("Time");

        date1.setText("Date");

        freq1.setText("Frequency");

        cRem.setText("Create");
        cRem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cRemActionPerformed(evt);
            }
        });

        cRemTitle.setFont(new java.awt.Font("Lucida Grande", 0, 14)); // NOI18N
        cRemTitle.setText("Create Reminder");

        remEvNo.setText("Event No.");

        backFromCreateRem.setText("Back");
        backFromCreateRem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                backFromCreateRemActionPerformed(evt);
            }
        });

        freqOptions.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "daily", "weekly", "monthly", "yearly" }));

        cRemError.setForeground(new java.awt.Color(255, 0, 0));

        javax.swing.GroupLayout createRemLayout = new javax.swing.GroupLayout(createRem);
        createRem.setLayout(createRemLayout);
        createRemLayout.setHorizontalGroup(
            createRemLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(createRemLayout.createSequentialGroup()
                .addGroup(createRemLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(createRemLayout.createSequentialGroup()
                        .addGap(142, 142, 142)
                        .addGroup(createRemLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(date1)
                            .addGroup(createRemLayout.createSequentialGroup()
                                .addGroup(createRemLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(remEvNo)
                                    .addComponent(time1)
                                    .addComponent(freq1))
                                .addGap(43, 43, 43)
                                .addGroup(createRemLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(freqOptions, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(remTime1, javax.swing.GroupLayout.PREFERRED_SIZE, 102, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(remDate1, javax.swing.GroupLayout.PREFERRED_SIZE, 102, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(remEvNoTF, javax.swing.GroupLayout.PREFERRED_SIZE, 102, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                    .addGroup(createRemLayout.createSequentialGroup()
                        .addGap(114, 114, 114)
                        .addGroup(createRemLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(cRemError, javax.swing.GroupLayout.PREFERRED_SIZE, 249, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(createRemLayout.createSequentialGroup()
                                .addComponent(backFromCreateRem)
                                .addGap(90, 90, 90)
                                .addComponent(cRem))))
                    .addGroup(createRemLayout.createSequentialGroup()
                        .addGap(180, 180, 180)
                        .addComponent(cRemTitle)))
                .addGap(31, 113, Short.MAX_VALUE))
        );
        createRemLayout.setVerticalGroup(
            createRemLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(createRemLayout.createSequentialGroup()
                .addContainerGap(44, Short.MAX_VALUE)
                .addComponent(cRemTitle)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(cRemError, javax.swing.GroupLayout.PREFERRED_SIZE, 18, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(createRemLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(remEvNo)
                    .addComponent(remEvNoTF, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(createRemLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(date1)
                    .addComponent(remDate1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(createRemLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(time1)
                    .addComponent(remTime1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(createRemLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(freq1)
                    .addComponent(freqOptions, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(22, 22, 22)
                .addGroup(createRemLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(cRem)
                    .addComponent(backFromCreateRem))
                .addGap(33, 33, 33))
        );

        placeholder.add(createRem, "card12");

        eRem.setText("Change");
        eRem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                eRemActionPerformed(evt);
            }
        });

        evNo1.setText("Event No.");

        eRemAtt1.setText("Edit...");

        remOptions1.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "REMINDERDATE", "REMINDERTIME", "FREQUENCY" }));

        newInfoRem1.setText("New Info");

        editRemTitle.setFont(new java.awt.Font("Lucida Grande", 0, 14)); // NOI18N
        editRemTitle.setText("Edit Reminder");

        backFromEditRem.setText("Back");
        backFromEditRem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                backFromEditRemActionPerformed(evt);
            }
        });

        rDate.setText("Reminder Date");

        editRemError.setForeground(new java.awt.Color(255, 0, 0));

        javax.swing.GroupLayout editRemLayout = new javax.swing.GroupLayout(editRem);
        editRem.setLayout(editRemLayout);
        editRemLayout.setHorizontalGroup(
            editRemLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(editRemLayout.createSequentialGroup()
                .addGap(187, 187, 187)
                .addComponent(editRemTitle)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, editRemLayout.createSequentialGroup()
                .addContainerGap(92, Short.MAX_VALUE)
                .addGroup(editRemLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, editRemLayout.createSequentialGroup()
                        .addComponent(backFromEditRem)
                        .addGap(75, 75, 75)
                        .addComponent(eRem))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, editRemLayout.createSequentialGroup()
                        .addGroup(editRemLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(eRemAtt1)
                            .addComponent(newInfoRem1))
                        .addGap(62, 62, 62)
                        .addGroup(editRemLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(editRemLayout.createSequentialGroup()
                                .addGap(27, 27, 27)
                                .addComponent(infoRemTF1, javax.swing.GroupLayout.PREFERRED_SIZE, 128, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(remOptions1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, editRemLayout.createSequentialGroup()
                        .addGroup(editRemLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(evNo1)
                            .addComponent(rDate))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(editRemLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(evNoTF1)
                            .addComponent(rDateTF, javax.swing.GroupLayout.DEFAULT_SIZE, 128, Short.MAX_VALUE)))
                    .addComponent(editRemError, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(111, 111, 111))
        );
        editRemLayout.setVerticalGroup(
            editRemLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, editRemLayout.createSequentialGroup()
                .addContainerGap(46, Short.MAX_VALUE)
                .addComponent(editRemTitle)
                .addGap(32, 32, 32)
                .addComponent(editRemError)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(editRemLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(evNo1)
                    .addComponent(evNoTF1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(editRemLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(rDate)
                    .addComponent(rDateTF, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(editRemLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(remOptions1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(eRemAtt1))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(editRemLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(newInfoRem1)
                    .addComponent(infoRemTF1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(editRemLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(eRem)
                    .addComponent(backFromEditRem))
                .addGap(51, 51, 51))
        );

        placeholder.add(editRem, "card13");

        backFromDeleteRem.setText("Back");
        backFromDeleteRem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                backFromDeleteRemActionPerformed(evt);
            }
        });

        dRemTitle.setFont(new java.awt.Font("Lucida Grande", 0, 14)); // NOI18N
        dRemTitle.setText("Delete Reminder");

        evNoL.setText("Event No. to delete:");

        dRem.setText("Delete");
        dRem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                dRemActionPerformed(evt);
            }
        });

        deleteRemError.setForeground(new java.awt.Color(255, 0, 0));

        remDate.setText("Reminder Date");

        javax.swing.GroupLayout deleteRemLayout = new javax.swing.GroupLayout(deleteRem);
        deleteRem.setLayout(deleteRemLayout);
        deleteRemLayout.setHorizontalGroup(
            deleteRemLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(deleteRemLayout.createSequentialGroup()
                .addGroup(deleteRemLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(deleteRemLayout.createSequentialGroup()
                        .addGap(72, 72, 72)
                        .addGroup(deleteRemLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(deleteRemError, javax.swing.GroupLayout.PREFERRED_SIZE, 204, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(deleteRemLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                .addComponent(remDateTF, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGroup(deleteRemLayout.createSequentialGroup()
                                    .addGroup(deleteRemLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(evNoL)
                                        .addComponent(remDate))
                                    .addGap(66, 66, 66)
                                    .addComponent(dRemTF, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGroup(javax.swing.GroupLayout.Alignment.LEADING, deleteRemLayout.createSequentialGroup()
                                    .addGap(62, 62, 62)
                                    .addComponent(backFromDeleteRem)
                                    .addGap(44, 44, 44)
                                    .addComponent(dRem)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)))))
                    .addGroup(deleteRemLayout.createSequentialGroup()
                        .addGap(177, 177, 177)
                        .addComponent(dRemTitle)))
                .addContainerGap(74, Short.MAX_VALUE))
        );
        deleteRemLayout.setVerticalGroup(
            deleteRemLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(deleteRemLayout.createSequentialGroup()
                .addGap(69, 69, 69)
                .addComponent(dRemTitle)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(deleteRemError)
                .addGap(29, 29, 29)
                .addGroup(deleteRemLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(evNoL)
                    .addComponent(dRemTF, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(deleteRemLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(remDate)
                    .addComponent(remDateTF, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 57, Short.MAX_VALUE)
                .addGroup(deleteRemLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(backFromDeleteRem)
                    .addComponent(dRem))
                .addGap(57, 57, 57))
        );

        placeholder.add(deleteRem, "card14");

        Account.setText("Account");

        viewAcc.setText("View");
        viewAcc.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                viewAccActionPerformed(evt);
            }
        });
        Account.add(viewAcc);

        jMenuBar1.add(Account);

        Event.setText("Event");

        CreateEvent.setText("Create");
        CreateEvent.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CreateEventActionPerformed(evt);
            }
        });
        Event.add(CreateEvent);

        EditEvent.setText("Edit");
        EditEvent.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                EditEventActionPerformed(evt);
            }
        });
        Event.add(EditEvent);

        DeleteEvent.setText("Delete");
        DeleteEvent.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                DeleteEventActionPerformed(evt);
            }
        });
        Event.add(DeleteEvent);

        jMenuBar1.add(Event);

        Reminder.setText("Reminder");

        CreateRem.setText("Create");
        CreateRem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CreateRemActionPerformed(evt);
            }
        });
        Reminder.add(CreateRem);

        EditRem.setText("Edit");
        EditRem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                EditRemActionPerformed(evt);
            }
        });
        Reminder.add(EditRem);

        DeleteRem.setText("Delete");
        DeleteRem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                DeleteRemActionPerformed(evt);
            }
        });
        Reminder.add(DeleteRem);

        jMenuBar1.add(Reminder);

        Settings.setText("Settings");

        CalendarRange.setText("Calendar Range");

        Day.setText("Day");
        Day.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                DayActionPerformed(evt);
            }
        });
        CalendarRange.add(Day);

        Week.setText("Week");
        Week.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                WeekActionPerformed(evt);
            }
        });
        CalendarRange.add(Week);

        Month.setText("Month");
        Month.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                MonthActionPerformed(evt);
            }
        });
        CalendarRange.add(Month);

        Settings.add(CalendarRange);

        CalendarColor.setText("Calendar Color");

        Red.setText("Red");
        Red.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                RedActionPerformed(evt);
            }
        });
        CalendarColor.add(Red);

        Green.setText("Green");
        Green.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                GreenActionPerformed(evt);
            }
        });
        CalendarColor.add(Green);

        Blue.setText("Blue");
        Blue.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BlueActionPerformed(evt);
            }
        });
        CalendarColor.add(Blue);

        Settings.add(CalendarColor);

        jMenuBar1.add(Settings);

        Help.setText("Help");
        jMenuBar1.add(Help);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 476, Short.MAX_VALUE)
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addGap(0, 0, Short.MAX_VALUE)
                    .addComponent(placeholder, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(0, 0, Short.MAX_VALUE)))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 340, Short.MAX_VALUE)
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addGap(0, 0, Short.MAX_VALUE)
                    .addComponent(placeholder, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(0, 0, Short.MAX_VALUE)))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void CreateAccButActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CreateAccButActionPerformed
        placeholder.removeAll();
        placeholder.repaint();
        placeholder.revalidate();

        placeholder.add(createAccount);
        placeholder.repaint();
        placeholder.revalidate();
    }//GEN-LAST:event_CreateAccButActionPerformed

    private void SignInButActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SignInButActionPerformed
        placeholder.removeAll();
        placeholder.repaint();
        placeholder.revalidate();

        placeholder.add(signIn);
        placeholder.repaint();
        placeholder.revalidate();
    }//GEN-LAST:event_SignInButActionPerformed

    private void backfromCreateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_backfromCreateActionPerformed
        goToFront();
    }//GEN-LAST:event_backfromCreateActionPerformed

    private void createActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_createActionPerformed
        USERNAME = newUserField.getText();
        PASSWORD = String.valueOf(newPassField.getPassword());

        DB_URL = DB_URL + DBNAME + ";user=" + USER + ";password=" + PASS;
        Connection conn = null;
        Statement stmt = null;

        try {
            Class.forName(JDBC_DRIVER);
            conn = DriverManager.getConnection(DB_URL);

            PreparedStatement ps = null;
            String sql = "SELECT * FROM \"USER\" WHERE LOWER(username) = LOWER(?)";
            ps = conn.prepareStatement(sql);
            ps.setString(1, USERNAME);
            ResultSet rs = ps.executeQuery();

            if (rs.next()) {
                error1.setText("Error. Try a different username.");
                USERNAME = newUserField.getText();
                ps.setString(1, USERNAME);
                rs = ps.executeQuery();
            } 
            else {
                PreparedStatement pstmt = null;
                String sql1 = "INSERT INTO \"USER\" (username, password) VALUES (?,?)";
                pstmt = conn.prepareStatement(sql1);
                pstmt.setString(1, USERNAME);
                pstmt.setString(2, PASSWORD);
                pstmt.executeUpdate();
                goHome();
                
                accUser.setText(USERNAME);
                accPass.setText(PASSWORD);
            }

        } catch (SQLException se) {
            se.printStackTrace();
        } catch (Exception e) {
            e.printStackTrace();
        } finally {
            try {
                if (stmt != null) {
                    stmt.close();
                }
            } catch (SQLException se2) {
            }
            try {
                if (conn != null) {
                    conn.close();
                }
            } catch (SQLException se) {
                se.printStackTrace();
            }
        }
    }//GEN-LAST:event_createActionPerformed

    private void backfromSignInActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_backfromSignInActionPerformed
        goToFront();
    }//GEN-LAST:event_backfromSignInActionPerformed

    private void enterActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_enterActionPerformed
        USERNAME = newUserField1.getText();
        PASSWORD = String.valueOf(newPassField1.getPassword());

        DB_URL = DB_URL + DBNAME + ";user=" + USER + ";password=" + PASS;
        Connection conn = null;
        Statement stmt = null;
        try {
            Class.forName(JDBC_DRIVER);
            conn = DriverManager.getConnection(DB_URL);

            PreparedStatement ps = null;
            String signIn = "select username, password from \"USER\" where username = ? and password = ?";
            ps = conn.prepareStatement(signIn);
            ps.setString(1, USERNAME);
            ps.setString(2, PASSWORD);
            ResultSet rs = ps.executeQuery();

            if (rs.next()) {
                signedIn = true;
                goHome();
                
                accUser.setText(USERNAME);
                accPass.setText(PASSWORD);

            } else {
                error.setText("Error. Wrong information.");
                placeholder.repaint();
                placeholder.revalidate();

                USERNAME = newUserField1.getText();
                PASSWORD = String.valueOf(newPassField1.getPassword());
            }
        } catch (SQLException se) {
            se.printStackTrace();
        } catch (Exception e) {
            e.printStackTrace();
        } finally {
            try {
                if (stmt != null) {
                    stmt.close();
                }
            } catch (SQLException se2) {
            }
            try {
                if (conn != null) {
                    conn.close();
                }
            } catch (SQLException se) {
                se.printStackTrace();
            }
        }
    }//GEN-LAST:event_enterActionPerformed

    private void DayActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_DayActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_DayActionPerformed

    private void CreateEventActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CreateEventActionPerformed
        placeholder.removeAll();
        placeholder.repaint();
        placeholder.revalidate();

        placeholder.add(createEvnt);
        placeholder.repaint();
        placeholder.revalidate();
    }//GEN-LAST:event_CreateEventActionPerformed

    private void EditEventActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_EditEventActionPerformed
        placeholder.removeAll();
        placeholder.repaint();
        placeholder.revalidate();

        placeholder.add(editEvnt);
        placeholder.repaint();
        placeholder.revalidate();
    }//GEN-LAST:event_EditEventActionPerformed

    private void MonthActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_MonthActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_MonthActionPerformed

    private void WeekActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_WeekActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_WeekActionPerformed

    private void RedActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_RedActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_RedActionPerformed

    private void GreenActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_GreenActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_GreenActionPerformed

    private void BlueActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BlueActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_BlueActionPerformed

    private void DeleteEventActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_DeleteEventActionPerformed
        placeholder.removeAll();
        placeholder.repaint();
        placeholder.revalidate();

        placeholder.add(deleteEvnt);
        placeholder.repaint();
        placeholder.revalidate();
    }//GEN-LAST:event_DeleteEventActionPerformed

    private void enterNewUserNameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_enterNewUserNameActionPerformed
        String uName = USERNAME;
        String confirmName = confirmUTF.getText();
      	String newName = newUTF.getText();
        
        DB_URL = DB_URL + DBNAME + ";user=" + USER + ";password=" + PASS;
        Connection conn = null;
        Statement stmt = null;
      	try
        {
            PreparedStatement editName = null;
            String editNameSQL = "UPDATE \"USER\" SET username = ? WHERE username = ?";
            Class.forName(JDBC_DRIVER);
            conn = DriverManager.getConnection(DB_URL);
            editName = conn.prepareStatement(editNameSQL);
            if(newName.equals(confirmName))
            {
                editName.setString(1,newName);
                editName.setString(2,uName);
                editName.executeUpdate();
                goHome();
            }
            else
            {
                NonMatchError.setText("Error. Usernames do not match.");
                confirmName = confirmUTF.getText();
                newName = newUTF.getText();
                editName.setString(1,newName);
                editName.setString(2, uName);
                editName.executeUpdate();
            }
            USERNAME = newName;
            accUser.setText(USERNAME);
        }
        catch (SQLException se) {
            se.printStackTrace();
        } catch (Exception e) {
            e.printStackTrace();
        } finally {
            try {
                if (stmt != null) {
                    stmt.close();
                }
            } catch (SQLException se2) {
            }
            try {
                if (conn != null) {
                    conn.close();
                }
            } catch (SQLException se) {
                se.printStackTrace();
            }
        }
    }//GEN-LAST:event_enterNewUserNameActionPerformed

    private void enterNewPWActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_enterNewPWActionPerformed
        String name = USERNAME;
        String oldPW = oldPWpf.getText();
      	String newPW = newPWpf.getText();
        String confPW = confPWpf.getText();
        
        DB_URL = DB_URL + DBNAME + ";user=" + USER + ";password=" + PASS;
        Connection conn = null;
        Statement stmt = null;
      	try
        {
            PreparedStatement editPW = null;
            String editPWSQL = "UPDATE \"USER\" SET password = ? WHERE username = ? AND password = ?";
            Class.forName(JDBC_DRIVER);
            conn = DriverManager.getConnection(DB_URL);
            editPW = conn.prepareStatement(editPWSQL);
            if(newPW.equals(confPW))
            {
                editPW.setString(1,newPW);
                editPW.setString(2,name);
                editPW.setString(3,oldPW);
                editPW.executeUpdate();
                goHome();
                
                PASSWORD = String.valueOf(newPWpf.getPassword());
                accPass.setText(PASSWORD);
            }
            else
            {
                NonMatchError1.setText("Error. Passwords do not match.");
                oldPW = oldPWpf.getText();
                newPW = newPWpf.getText();
                confPW = confPWpf.getText();
                editPW.setString(1,newPW);
                editPW.setString(2,name);
                editPW.setString(3,oldPW);
                editPW.executeUpdate();
            }
        }
        catch (SQLException se) {
            se.printStackTrace();
        } catch (Exception e) {
            e.printStackTrace();
        } finally {
            try {
                if (stmt != null) {
                    stmt.close();
                }
            } catch (SQLException se2) {
            }
            try {
                if (conn != null) {
                    conn.close();
                }
            } catch (SQLException se) {
                se.printStackTrace();
            }
        }
    }//GEN-LAST:event_enterNewPWActionPerformed

    private void ePassActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ePassActionPerformed
        placeholder.removeAll();
        placeholder.repaint();
        placeholder.revalidate();

        placeholder.add(editPass);
        placeholder.repaint();
        placeholder.revalidate();
    }//GEN-LAST:event_ePassActionPerformed

    private void eUseActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_eUseActionPerformed
                
        placeholder.removeAll();
        placeholder.repaint();
        placeholder.revalidate();

        placeholder.add(editUser);
        placeholder.repaint();
        placeholder.revalidate();
    }//GEN-LAST:event_eUseActionPerformed

    private void viewAccActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_viewAccActionPerformed
        goViewAcc();
    }//GEN-LAST:event_viewAccActionPerformed

    private void backfromViewActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_backfromViewActionPerformed
        goHome();
    }//GEN-LAST:event_backfromViewActionPerformed

    private void backFromEPassActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_backFromEPassActionPerformed
        goViewAcc();
    }//GEN-LAST:event_backFromEPassActionPerformed

    private void backFromEUseActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_backFromEUseActionPerformed
        goViewAcc();
    }//GEN-LAST:event_backFromEUseActionPerformed

    private void cEvntActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cEvntActionPerformed
        String uName = USERNAME;
      	String title = titleTF.getText();
        String sDate = sdTF.getText();
      	String eDate = edTF.getText();
        String locn = locTF.getText();
      	String descrpn = descTF.getText();
        
        DB_URL = DB_URL + DBNAME + ";user=" + USER + ";password=" + PASS;
        Connection conn = null;
        Statement stmt = null;
      	try
        {
            int min = 1;
            int max = 100;
            Class.forName(JDBC_DRIVER);
            conn = DriverManager.getConnection(DB_URL);
            
            //need to find a different strategy of generating eventnumbers
            //suggestion: generate random number
            //perform query to find row with random number
            //if not found, assign to nextInt
            //if found, generate another number and repeat cycle
            Random r = new Random();
            int rand = r.nextInt((max-min)+1)+min;
           
            String s = "select * from event where eventno = ?";
            PreparedStatement num = conn.prepareStatement(s);
            num.setString(1, Integer.toString(rand));
            ResultSet rs = num.executeQuery();
            if(rs.next())
            {
                rand = r.nextInt((max-min)+1)+min;
                num.setString(1, Integer.toString(rand));
                rs = num.executeQuery();
            }
            else
            {
                String sql = "INSERT INTO Event (UserName, EventNo, EventName, StartDate, EndDate, Location, Description)"
                    + "VALUES (?, ?, ?, ?, ?, ?, ?)";
                PreparedStatement pstmt = conn.prepareStatement(sql);
            
                pstmt.setString(1, uName);
                pstmt.setString(2, Integer.toString(rand));
                pstmt.setString(3, title);
                pstmt.setString(4, sDate);
                pstmt.setString(5, eDate);
                pstmt.setString(6, locn);
                pstmt.setString(7, descrpn);
                pstmt.executeUpdate();
                titleTF.setText("");
                sdTF.setText("");
                edTF.setText("");
                locTF.setText("");
                descTF.setText("");
                goHome();
            }
            //String sqlTotal = "SELECT Count(EventNo) FROM Event";
            //PreparedStatement total = conn.prepareStatement(sqlTotal);
            
            //ResultSet rs = total.executeQuery();
            
            //String nextEventNo = "";
            
            //while (rs.next()) {
            //    nextEventNo = rs.getString(1);
            //}
            
            //int nextInt = Integer.parseInt(nextEventNo) + 1;
            
        }
        catch (SQLException se) {
            se.printStackTrace();
        } catch (Exception e) {
            e.printStackTrace();
        } finally {
            try {
                if (stmt != null) {
                    stmt.close();
                }
            } catch (SQLException se2) {
            }
            try {
                if (conn != null) {
                    conn.close();
                }
            } catch (SQLException se) {
                se.printStackTrace();
            }
        }
    }//GEN-LAST:event_cEvntActionPerformed

    private void backFromCreateEvntActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_backFromCreateEvntActionPerformed
        goHome();
    }//GEN-LAST:event_backFromCreateEvntActionPerformed

    private void cRemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cRemActionPerformed
        String uName = USERNAME;
      	String eventNo = remEvNoTF.getText();
        String reminderDate = remDate1.getText();
      	String reminderTime = remTime1.getText();
        String frequency = freqOptions.getSelectedItem().toString();
        
        DB_URL = DB_URL + DBNAME + ";user=" + USER + ";password=" + PASS;
        Connection conn = null;
        Statement stmt = null;
      	try
        {
            Class.forName(JDBC_DRIVER);
            conn = DriverManager.getConnection(DB_URL);
            String s = "select * from reminder where username = ? and eventnumber = ? and reminderdate = ?";
            PreparedStatement ps = conn.prepareStatement(s);
            ps.setString(1,uName);
            ps.setString(2, eventNo);
            ps.setString(3, reminderDate);
            ResultSet rs = ps.executeQuery();
            if(rs.next())
            {
                cRemError.setText("Error. Reminder already exists.");
                uName = USERNAME;
                eventNo = remEvNoTF.getText();
                reminderDate = remDate1.getText();
                ps.setString(1,uName);
                ps.setString(2, eventNo);
                ps.setString(3, reminderDate);
                rs = ps.executeQuery();
            }
            else
            {
                String sql = "INSERT INTO REMINDER (USERNAME,EVENTNUMBER,REMINDERDATE,REMINDERTIME,FREQUENCY) "
                     + "VALUES (?,?,?,?,?)";
                PreparedStatement pstmt = conn.prepareStatement(sql);
            
                pstmt.setString(1,uName);
                pstmt.setString(2,eventNo);
                pstmt.setString(3,reminderDate);
                pstmt.setString(4,reminderTime);
                pstmt.setString(5,frequency);
                pstmt.execute();
                
                remEvNoTF.setText("");
                remDate1.setText("");
                remTime1.setText("");
                cRemError.setText("");
                goHome(); 
            }
        }
        catch (SQLException se) {
            cRemError.setText("Error. Event does not exist.");
        } catch (Exception e) {
            e.printStackTrace();
        } finally {
            try {
                if (stmt != null) {
                    stmt.close();
                }
            } catch (SQLException se2) {
            }
            try {
                if (conn != null) {
                    conn.close();
                }
            } catch (SQLException se) {
                se.printStackTrace();
            }
        }
    }//GEN-LAST:event_cRemActionPerformed

    private void backFromCreateRemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_backFromCreateRemActionPerformed
        goHome();
    }//GEN-LAST:event_backFromCreateRemActionPerformed

    private void DeleteRemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_DeleteRemActionPerformed
        placeholder.removeAll();
        placeholder.repaint();
        placeholder.revalidate();

        placeholder.add(deleteRem);
        placeholder.repaint();
        placeholder.revalidate();
    }//GEN-LAST:event_DeleteRemActionPerformed

    private void CreateRemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CreateRemActionPerformed
        placeholder.removeAll();
        placeholder.repaint();
        placeholder.revalidate();

        placeholder.add(createRem);
        placeholder.repaint();
        placeholder.revalidate();
    }//GEN-LAST:event_CreateRemActionPerformed

    private void EditRemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_EditRemActionPerformed
        placeholder.removeAll();
        placeholder.repaint();
        placeholder.revalidate();

        placeholder.add(editRem);
        placeholder.repaint();
        placeholder.revalidate();
    }//GEN-LAST:event_EditRemActionPerformed

    private void eRemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_eRemActionPerformed
        String uName = USERNAME;
        String eventNo = evNoTF1.getText();
        String remDate = rDateTF.getText();
        String thingToEdit = remOptions1.getSelectedItem().toString();
        String change = infoRemTF1.getText();
        
        DB_URL = DB_URL + DBNAME + ";user=" + USER + ";password=" + PASS;
        Connection conn = null;
        Statement stmt = null;
      	try
        {
            Class.forName(JDBC_DRIVER);
            conn = DriverManager.getConnection(DB_URL);
            
            String s = "select * from reminder where eventnumber = ? and username = ? and reminderdate = ?";
            PreparedStatement ps = conn.prepareStatement(s);
            ps.setString(1, eventNo);
            ps.setString(2, uName);
            ps.setString(3,remDate);
            ResultSet rs = ps.executeQuery();
            if(rs.next())
            {
                String sql = "UPDATE REMINDER SET "+ thingToEdit + " = ? WHERE EVENTNUMBER = ? AND USERNAME = ?";
                PreparedStatement pstmt = conn.prepareStatement(sql);
                pstmt.setString(1, change);
                pstmt.setString(2, eventNo);
                pstmt.setString(3, uName);
                pstmt.execute();
                evNoTF1.setText("");
                rDateTF.setText("");
                infoRemTF1.setText("");
                editRemError.setText("");
                goHome();
            }
            else
            {
                editRemError.setText("Error. Reminder does not exist.");
                eventNo = evNoTF1.getText();
                remDate = rDateTF.getText();
                change = infoRemTF1.getText();
                ps.setString(1,eventNo);
                ps.setString(2,uName);
                ps.setString(3,remDate);
                rs = ps.executeQuery();
            }
        }
        catch (SQLException se) {
            se.printStackTrace();
        } catch (Exception e) {
            e.printStackTrace();
        } finally {
            try {
                if (stmt != null) {
                    stmt.close();
                }
            } catch (SQLException se2) {
            }
            try {
                if (conn != null) {
                    conn.close();
                }
            } catch (SQLException se) {
                se.printStackTrace();
            }
        }
    }//GEN-LAST:event_eRemActionPerformed

    private void backFromEditRemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_backFromEditRemActionPerformed
        goHome();
    }//GEN-LAST:event_backFromEditRemActionPerformed

    private void eEvntActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_eEvntActionPerformed
        String eventNo = evNoTF.getText();
        String thingToEdit = eventOptions.getSelectedItem().toString();
        String change = infoEventTF.getText();
        
        DB_URL = DB_URL + DBNAME + ";user=" + USER + ";password=" + PASS;
        Connection conn = null;
        Statement stmt = null;
      	try
        {
            Class.forName(JDBC_DRIVER);
            conn = DriverManager.getConnection(DB_URL); 
            
            String s = "select * from event where eventno = ?";
            PreparedStatement ps = conn.prepareStatement(s);
            ps.setString(1, eventNo);
            ResultSet rs = ps.executeQuery();
            
            if(rs.next())
            {
                String sql = "UPDATE EVENT SET "+ thingToEdit + " = ? WHERE EVENTNO = ?";
                PreparedStatement pstmt = conn.prepareStatement(sql);
            
                pstmt.setString(1, change);
                pstmt.setString(2, eventNo);
                pstmt.execute();
                
                evNoTF.setText("");
                infoEventTF.setText("");
                eEventError.setText("");
                goHome();   
            }
            else
            {
                eEventError.setText("Error. Event does not exist.");
                eventNo = evNoTF.getText();
                ps.setString(1, eventNo);
                rs = ps.executeQuery();
            }
        }
        catch (SQLException se) {
            se.printStackTrace();
        } catch (Exception e) {
            e.printStackTrace();
        } finally {
            try {
                if (stmt != null) {
                    stmt.close();
                }
            } catch (SQLException se2) {
            }
            try {
                if (conn != null) {
                    conn.close();
                }
            } catch (SQLException se) {
                se.printStackTrace();
            }
        }
    }//GEN-LAST:event_eEvntActionPerformed

    private void backFromEditEventActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_backFromEditEventActionPerformed
        goHome();
    }//GEN-LAST:event_backFromEditEventActionPerformed

    private void dRemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_dRemActionPerformed
        String uName = USERNAME;
        String remove = dRemTF.getText();
        String remD = remDateTF.getText();
        
        DB_URL = DB_URL + DBNAME + ";user=" + USER + ";password=" + PASS;
        Connection conn = null;
        Statement stmt = null;
      	try
        {
            Class.forName(JDBC_DRIVER);
            conn = DriverManager.getConnection(DB_URL);
            
            String sql = "select * from reminder where eventnumber = ? and username = ? and reminderdate = ?";
            PreparedStatement ps = conn.prepareStatement(sql);
            ps.setString(1,remove);
            ps.setString(2,uName);
            ps.setString(3, remD);
            ResultSet rs = ps.executeQuery();
            if(rs.next())
            {
                String str = "delete from reminder where eventnumber = ? and username = ? and reminderdate = ?";
                PreparedStatement pstmt = conn.prepareStatement(str);
                pstmt.setString(1, remove);
                pstmt.setString(2, uName);
                pstmt.setString(3, remD);
                pstmt.execute();
                dRemTF.setText("");
                remDateTF.setText("");
                deleteRemError.setText("");
                goHome();
            }
            else
            {
                deleteRemError.setText("Error.  Reminder does not exist.");
                remove = dRemTF.getText();
                remD = remDateTF.getText();
                ps.setString(1,remove);
                ps.setString(2, uName);
                ps.setString(3, remD);
                rs = ps.executeQuery();
            }
        }
        catch (SQLException se) {
            se.printStackTrace();
        } catch (Exception e) {
            e.printStackTrace();
        } finally {
            try {
                if (stmt != null) {
                    stmt.close();
                }
            } catch (SQLException se2) {
            }
            try {
                if (conn != null) {
                    conn.close();
                }
            } catch (SQLException se) {
                se.printStackTrace();
            }
        }
    }//GEN-LAST:event_dRemActionPerformed

    private void backFromDeleteRemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_backFromDeleteRemActionPerformed
        goHome();
    }//GEN-LAST:event_backFromDeleteRemActionPerformed

    private void dEvntActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_dEvntActionPerformed
        String remove = dEvntTF.getText();
        
        DB_URL = DB_URL + DBNAME + ";user=" + USER + ";password=" + PASS;
        Connection conn = null;
        Statement stmt = null;
      	try
        {
            Class.forName(JDBC_DRIVER);
            conn = DriverManager.getConnection(DB_URL);
            
            String s = "select * from event where eventno = ?";
            PreparedStatement ps = conn.prepareStatement(s);
            ps.setString(1,remove);
            ResultSet rs = ps.executeQuery();
            if(rs.next())
            {
                String sql = "DELETE FROM Event WHERE EventNo = ?";
                PreparedStatement pstmt = conn.prepareStatement(sql);
                pstmt.setString(1, remove);
                pstmt.execute();
                dEvntError.setText("");
                dEvntTF.setText("");
                goHome();
            }
            else
            {
                dEvntError.setText("Error. Event does not exist.");
                remove = dEvntTF.getText();
                ps.setString(1,remove);
                rs = ps.executeQuery();
            }
        }
        catch (SQLException se) {
            se.printStackTrace();
        } catch (Exception e) {
            e.printStackTrace();
        } finally {
            try {
                if (stmt != null) {
                    stmt.close();
                }
            } catch (SQLException se2) {
            }
            try {
                if (conn != null) {
                    conn.close();
                }
            } catch (SQLException se) {
                se.printStackTrace();
            }
        }
    }//GEN-LAST:event_dEvntActionPerformed

    private void backFromDeleteEvntActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_backFromDeleteEvntActionPerformed
        goHome();
    }//GEN-LAST:event_backFromDeleteEvntActionPerformed

    private void goHome()
    {
        placeholder.removeAll();
        placeholder.repaint();
        placeholder.revalidate();

        placeholder.add(homePage);
        placeholder.repaint();
        placeholder.revalidate();
    }
    
    private void goViewAcc()
    {            
        placeholder.removeAll();
        placeholder.repaint();
        placeholder.revalidate();

        placeholder.add(viewAccount);
        placeholder.repaint();
        placeholder.revalidate();
    }
    
    private void goToFront()
    {
        placeholder.removeAll();
        placeholder.repaint();
        placeholder.revalidate();

        placeholder.add(openApp);
        placeholder.repaint();
        placeholder.revalidate();
    }
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new MainFrame().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JMenu Account;
    private javax.swing.JMenuItem Blue;
    private javax.swing.JMenu CalendarColor;
    private javax.swing.JMenu CalendarRange;
    private javax.swing.JButton CreateAccBut;
    private javax.swing.JMenuItem CreateEvent;
    private javax.swing.JMenuItem CreateRem;
    private javax.swing.JMenuItem Day;
    private javax.swing.JMenuItem DeleteEvent;
    private javax.swing.JMenuItem DeleteRem;
    private javax.swing.JMenuItem EditEvent;
    private javax.swing.JMenuItem EditRem;
    private javax.swing.JMenu Event;
    private javax.swing.JMenuItem Green;
    private javax.swing.JMenu Help;
    private javax.swing.JMenuItem Month;
    private javax.swing.JLabel NonMatchError;
    private javax.swing.JLabel NonMatchError1;
    private javax.swing.JMenuItem Red;
    private javax.swing.JMenu Reminder;
    private javax.swing.JMenu Settings;
    private javax.swing.JButton SignInBut;
    private javax.swing.JMenuItem Week;
    private javax.swing.JLabel accPass;
    private javax.swing.JLabel accUser;
    private javax.swing.JLabel acctitle;
    private javax.swing.JButton backFromCreateEvnt;
    private javax.swing.JButton backFromCreateRem;
    private javax.swing.JButton backFromDeleteEvnt;
    private javax.swing.JButton backFromDeleteRem;
    private javax.swing.JButton backFromEPass;
    private javax.swing.JButton backFromEUse;
    private javax.swing.JButton backFromEditEvent;
    private javax.swing.JButton backFromEditRem;
    private javax.swing.JButton backfromCreate;
    private javax.swing.JButton backfromSignIn;
    private javax.swing.JButton backfromView;
    private javax.swing.JButton cEvnt;
    private javax.swing.JLabel cEvntTitle;
    private javax.swing.JButton cRem;
    private javax.swing.JLabel cRemError;
    private javax.swing.JLabel cRemTitle;
    private javax.swing.JPasswordField confPWpf;
    private javax.swing.JLabel confirmNewNameL;
    private javax.swing.JLabel confirmPassL;
    private javax.swing.JTextField confirmUTF;
    private javax.swing.JButton create;
    private javax.swing.JPanel createAccount;
    private javax.swing.JPanel createEvnt;
    private javax.swing.JPanel createRem;
    private javax.swing.JLabel createTitle;
    private javax.swing.JLabel createTitle1;
    private javax.swing.JLabel dEventInfo;
    private javax.swing.JLabel dEventTitle;
    private javax.swing.JButton dEvnt;
    private javax.swing.JLabel dEvntError;
    private javax.swing.JTextField dEvntTF;
    private javax.swing.JButton dRem;
    private javax.swing.JTextField dRemTF;
    private javax.swing.JLabel dRemTitle;
    private javax.swing.JLabel date1;
    private javax.swing.JPanel deleteEvnt;
    private javax.swing.JPanel deleteRem;
    private javax.swing.JLabel deleteRemError;
    private javax.swing.JTextField descTF;
    private javax.swing.JLabel eDesc;
    private javax.swing.JLabel eEndDate;
    private javax.swing.JLabel eEventAtt;
    private javax.swing.JLabel eEventError;
    private javax.swing.JButton eEvnt;
    private javax.swing.JLabel eLocation;
    private javax.swing.JButton ePass;
    private javax.swing.JButton eRem;
    private javax.swing.JLabel eRemAtt1;
    private javax.swing.JLabel eStartDate;
    private javax.swing.JLabel eTitle;
    private javax.swing.JButton eUse;
    private javax.swing.JTextField edTF;
    private javax.swing.JPanel editEvnt;
    private javax.swing.JLabel editEvntTitle;
    private javax.swing.JLabel editPWtitle;
    private javax.swing.JPanel editPass;
    private javax.swing.JPanel editRem;
    private javax.swing.JLabel editRemError;
    private javax.swing.JLabel editRemTitle;
    private javax.swing.JPanel editUser;
    private javax.swing.JLabel editUserTitle;
    private javax.swing.JButton enter;
    private javax.swing.JButton enterNewPW;
    private javax.swing.JButton enterNewUserName;
    private javax.swing.JLabel error;
    private javax.swing.JLabel error1;
    private javax.swing.JLabel evNo;
    private javax.swing.JLabel evNo1;
    private javax.swing.JLabel evNoL;
    private javax.swing.JTextField evNoTF;
    private javax.swing.JTextField evNoTF1;
    private javax.swing.JComboBox eventOptions;
    private javax.swing.JLabel freq1;
    private javax.swing.JComboBox freqOptions;
    private javax.swing.JLabel greeting;
    private javax.swing.JPanel homePage;
    private javax.swing.JTextField infoEventTF;
    private javax.swing.JTextField infoRemTF1;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JTextField locTF;
    private javax.swing.JLabel newInfoEvent;
    private javax.swing.JLabel newInfoRem1;
    private javax.swing.JLabel newNameL;
    private javax.swing.JLabel newPWl;
    private javax.swing.JPasswordField newPWpf;
    private javax.swing.JPasswordField newPassField;
    private javax.swing.JPasswordField newPassField1;
    private javax.swing.JTextField newUTF;
    private javax.swing.JTextField newUserField;
    private javax.swing.JTextField newUserField1;
    private javax.swing.JLabel oldPWl;
    private javax.swing.JPasswordField oldPWpf;
    private javax.swing.JPanel openApp;
    private javax.swing.JLabel passwordTxt;
    private javax.swing.JLabel passwordTxt1;
    private javax.swing.JPanel placeholder;
    private javax.swing.JLabel rDate;
    private javax.swing.JTextField rDateTF;
    private javax.swing.JLabel remDate;
    private javax.swing.JTextField remDate1;
    private javax.swing.JTextField remDateTF;
    private javax.swing.JLabel remEvNo;
    private javax.swing.JTextField remEvNoTF;
    private javax.swing.JComboBox remOptions1;
    private javax.swing.JTextField remTime1;
    private javax.swing.JTextField sdTF;
    private javax.swing.JPanel signIn;
    private javax.swing.JLabel time1;
    private javax.swing.JTextField titleTF;
    private javax.swing.JLabel upToDatetitle;
    private javax.swing.JLabel usernameTxt;
    private javax.swing.JLabel usernameTxt1;
    private javax.swing.JLabel usertitle;
    private javax.swing.JMenuItem viewAcc;
    private javax.swing.JPanel viewAccount;
    private javax.swing.JLabel viewTitle;
    // End of variables declaration//GEN-END:variables
}
